___________________________________Отношение Многие ко многим____________________________________

              Actor                                                     Movie
  ------------------------------------                      ------------------------------------
  |  user_id   |   name    |   age   |                      |  movie_id  |     movie_name      |
  |------------|-----------|---------|                      |------------|---------------------|
  |     1      |    Tom    |    35   |                      |     1      |      Goodfellas     |
  |     2      |    Bob    |    52   |                      |     2      |     Pulp Fiction    |
  |     3      |    Katy   |    14   |                      |     3      |        Snatch       |
  ------------------------------------                      ------------------------------------
        |           FK                     FK                     |
        |           \     Actor_movie     /                       |
        -----------------------------------------------------------
                    |  actor_id | movie_id |
                    |-----------|----------|
                    |     1     |     1    |
                    |     1     |     3    |
                    |     2     |     2    |
                    |     3     |     1    |
                    |     3     |     2    |
                    ------------------------
                              |    |
                              |    |
                              |    | ORM (Hibernate)
                              |    |
                               Java

______________________________Аннотации @ManyToMany и @JoinTable_______________________________________

@Entity
@Table (name = "Actor")
public class Actor {
    @ManyToMany
    @JoinTable(
            name = "Actor_Movie",
            joincolumns = @JoinColumn (name = "Actor_id")
            inverseJoinColumns = @JoinColumn (name = "movie_id"))
    private List<Movie> movies;

@Entity
@Table (name = "Movie")
public class Movie {

    @ManyToMany (mappedBy = "movies")
    private List<Actor> actors;
}

Могли поместить @JoinTable в сущность Movie, разницы нет
Нет как таковой owning side, так как ни одна из сущностей не владеет внешним ключом