______________________________________Ленивая загрузка____________________________________________
                                Lazy loading vs. Eager loading
Пример: Человек и его товары
- Зависимых сущностей может быть много
- Хотим получить сущность, но нам не всегда нужны связанные сущности
- Связанные сущности загружаются сразу, когда мы получаем человека или после вызова геттера ?

Ленивая (Lazy) и не ленивая (Eager) загрузка связанных сущностей

//Если Eager --> товары загрузяться уже здесь
Person person = session.get(Person.class, serializable: 1);

//Если Lazy --> товары загрузятся только после запроса
System.out.println(person.getItems());

____________________________________________________
|         Tom      |     40      |     Подробнее   |
|         Bob      |     25      |     Подробнее   |
|         Katy     |     48      |     Подробнее   |
|         Alice    |     23      |     Подробнее   |
|         Olga     |     30      |     Подробнее   |
----------------------------------------------------
На этой странице не нужны товары всех людей
Если будет загрузка товаров для каждого человека из списка - долгая загрузка списка
Ленивая загрузка - быстрая и почти всегда является хорошей практикой

_______________________________________FetchType_________________________________________________
Связанные товары загружаются сразу
@OneToMany (mappedBy = "owner", fetch = FetchType.EAGER)
private List<Item> items;

Связанные товары загружаются только по запросу ( при вызове геттера например)
@OneToMany (mappedBy = "owner", fetch = FetchType.LAZY)
private List<Item> items;

_____________________FetchType по умолчанию (Когда его не указывают)_______________________________
@OneToMany - LAZY
@ManyToOne - EAGER
@ManyToMany - LAZY
@OneToOne - EAGER

_____________________________________Ленивая загрузка______________________________________________
Session session = sessionFactory.getCurrentSession();
session.beginTranscription();

Person person = session.get (Person.class,serializable: 1);
System.out.println("Получили человека из таблицы");         Мы можем подгружать связанные сущности
                                                            только находясь внутри транзакции
//Подгрузили его товары (связанные сущности)                (сущность должна находиться в
System.out.println(person.getItems());                      Persistent/ Managed состоянии)

session.getTransaction().commit();
--------------------------------------------------------------------------------------------------
Session session = sessionFactory.getCurrentSession();
session.beginTranscription();

Person person = session.get (Person.class,serializable: 1);        За пределами Hibernate сессии
System.out.println(person.getItems());                             (Detached состояние) загрузить
                                                                   связанные сущности уже не
//Транзакция завершилась --> связанная сессия закрылась            получится - будет ошибка
session.getTransaction().commit();

//ОШИБКА - находимся за пределами сессии (Detached состояние)
System.out.println(person.getItems());